Public dbPath As String'*****************************************************' Purpose:  checks if the Report Sheet does already'           exist if so it gets deleted and then'           a new sheet gets create named Report' Inputs:'' Returns:'*****************************************************Sub createReportSheet()    Application.DisplayAlerts = False        Dim ws As Worksheet        For Each ws In Sheets        If (ws.Name = "Report") Then            ws.Delete        End If    Next          Sheets.Add(Type:=xlWorksheet).Name = "Report"           Application.DisplayAlerts = True    End SubSub createReport()    createReportSheet    If checkDBConnection = False Then        MsgBox " The DB Connection is not working sorry "        findDB    End If                End SubFunction checkDBConnection() As Boolean    checkDBConnection = False    myPath = ActiveWorkbook.Path & "\Zeiterfassung" & "\pecoDB.accdb"    If Dir(myPath) <> "" Then         dbPath = myPath        checkDBConnection = True    Else               checkDBConnection = False    End If    Debug.Print dbPath    End FunctionSub findDB()End Sub'*****************************************************' Purpose:  checks the Format of Sheet:Times Table1'           all wrong formats colored red'' Inputs:'' Returns:'*****************************************************Function checkTimesSheet() As Boolean    checkTimesSheet = True    Dim row As range        ' function to check if input works        For Each row In [Table1].Rows        row.Cells.Interior.ColorIndex = 2   ' White = 1              'Debug.Print row.Cells(1, 3).Value                        If checkDatum(row.Cells(1, 1).Value, row) = False Then            row.Cells(1, 1).Interior.ColorIndex = 3  ' Red = 3            checkTimesSheet = False        End If                If checkWochentag(row.Cells(1, 2).Value, row) = False Then            row.Cells(1, 2).Interior.ColorIndex = 3            checkTimesSheet = False        End If                If checkVonBis(row.Cells(1, 3).Value, row.Cells(1, 4).Value, row) = False Then            row.Cells(1, 3).Interior.ColorIndex = 3            row.Cells(1, 4).Interior.ColorIndex = 3            checkTimesSheet = False        End If                        If checkProjekt(row.Cells(1, 5).Value, row) = False Then            row.Cells(1, 5).Interior.ColorIndex = 3            checkTimesSheet = False        End If                If checkTaetigkeitsart(row.Cells(1, 6).Value, row) = False Then            row.Cells(1, 6).Interior.ColorIndex = 3            checkTimesSheet = False        End If                If checkMitarbeiter(row.Cells(1, 9).Value, row) = False Then            row.Cells(1, 9).Interior.ColorIndex = 3            checkTimesSheet = False        End If                If checkKW(row.Cells(1, 10).Value, row) = False Then            row.Cells(1, 10).Interior.ColorIndex = 3            checkTimesSheet = False        End If            Next    End FunctionFunction checkDatum(v As Variant, r As range) As Boolean    Dim myRegExp As RegExp      Set myRegExp = New RegExp       myRegExp.Pattern = "^(\d\d)\.(\d\d)\.(\d\d\d\d)$"    'myRegExp.Pattern = "^(\s)*(\d\d)\.(\d\d)\.(\d\d\d\d)(\s)*$"    ' if we were to allow leading blanks        If myRegExp.test(v) Then        checkDatum = True    Else         checkDatum = False    End If    End FunctionFunction checkWochentag(v As Variant, r As range) As Boolean       Dim myRegExp As RegExp      Set myRegExp = New RegExp       myRegExp.Pattern = "^Montag$|^Dienstag$|^Mittwoch$|^Donnerstag$|^Freitag$|^Samstag$|^Sonntag$"       If myRegExp.test(v) Then        checkWochentag = True    Else         checkWochentag = False    End If                            End FunctionFunction checkVonBis(von As Variant, bis As Variant, r As range) As Boolean   On Error GoTo errorhandler    Dim myRegExp As RegExp            Dim a As String    Dim b As String    On Error GoTo errorhandler        a = CDate(von)    'a = cb_timefrom.Value    b = CDate(bis)    Debug.Print a    Debug.Print b       ' b = cb_timeto.Value    Dim c As Date                        c = TimeValue(b) - TimeValue(a)    If c <= 0 Then        checkVonBis = False        Return    End If       checkVonBis = True            If 1 < 2 Then        Elseerrorhandler:        checkVonBis = False        Exit Function    End IfEnd FunctionFunction checkProjekt(v As Variant, r As range) As BooleanEnd FunctionFunction checkTaetigkeitsart(v As Variant, r As range) As BooleanEnd FunctionFunction checkMitarbeiter(v As Variant, r As range) As BooleanEnd FunctionFunction checkKW(v As Variant, r As range) As BooleanEnd Function                        